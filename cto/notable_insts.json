{
    "single": {
        "VC++ basic_string<char> initialization": {"rule": "mov +(\\[[re][bs]p|qword ptr \\[r..?|dword ptr \\[e..).*\\], 0Fh", "regex":true},
        "VC++ basic_string<wchar_t> initialization": {"rule": "mov +(\\[[re][bs]p|qword ptr \\[r..?|dword ptr \\[e..).*\\], 7(|\\s;.*)$", "regex":true},
        "VC++ basic_string<char>.c_str()": {"rule": "cmp +(dword ptr \\[e.+\\]|qword ptr \\[r.+\\]|\\[r[bs]p.+\\]), 10h", "regex":true},
        "VC++ basic_string<wchar_t>.c_str()": {"rule": "cmp +(dword ptr \\[e.+\\]|qword ptr \\[r.+\\]|\\[r[bs]p.+\\]), 8(|\\s;.*)$", "regex":true},
        "VC++ std::map<unk,unk> map node ctor (for 64-bit)": {"rule": "mov +word ptr \\[r.+\\+18h\\], 101h$", "regex":true},
        "VC++ std::map<unk,unk> map node ctor (for 32-bit)": {"rule": "mov +word ptr \\[e.+\\+0Ch\\], 101h$", "regex":true},
        "VC++ std::map<unk,unk> map node ctor (for 64-bit, old versions)": {"rule": "mov +word ptr \\[r.+\\+(?!18)[0-9A-F]+h\\], 101h$", "regex":true},
        "VC++ std::map<unk,unk> map node ctor (for 32-bit, old versions)": {"rule": "mov +word ptr \\[e.+\\+(?!0C)[0-9A-F]+h\\], 101h$", "regex":true}
    },
    "multiple":{
        "VC++ 7.0 (2002) to 9.0 (2008) for 64-bit basic_string<char>.c_str()": {"rules": [["mov +r..?, \\[r..?\\+20h\\]", 0], ["cmp +r..?, 10h", 2], ["jb +short ", 2]], "regex":true},
        "VC++ 7.0 (2002) to 9.0 (2008) for 32-bit basic_string<char>.c_str()": {"rules": [["mov +e..?, \\[e..?\\+18h\\]", 0], ["cmp +e..?, 10h", 2], ["jb +short ", 2]], "regex":true},
        "Possible VC++ 7.0 (2002) to 9.0 (2008) for 32-bit basic_string<char>.c_str()": {"rules": [["mov +[re]..?, \\[[re][sb]p\\+.+\\]", 0], ["cmp +[re]..?, 10h", 2], ["jb +short ", 2]], "regex":true},
        "VC++ 7.0 (2002) to 9.0 (2008) for 64-bit basic_string<wchar_t>.c_str()": {"rules": [["mov +r..?, \\[r..?\\+20h\\]", 0], ["cmp r..?, 8(|\\s;.*)$", 2], ["jb +short ", 2]], "regex":true},
        "VC++ 7.0 (2002) to 9.0 (2008) for 32-bit basic_string<wchar_t>.c_str()": {"rules": [["mov +e..?, \\[\\[e[sb]p\\+.+\\]", 0], ["cmp e..?, 8(|\\s;.*)$", 2], ["jb +short ", 2]], "regex":true},
        "VC++ 7.0 (2002) to 9.0 (2008) for 64-bit basic_string<wchar_t>.c_str()": {"rules": [["mov +[re]..?, \\[\\[[re][sb]p\\+.+\\]", 0], ["cmp [re]..?, 8(|\\s;.*)$", 2], ["jb +short ", 2]], "regex":true},
        "VC++ ios_base.init()": {"rules": [["mov +dword ptr \\[[re].+\\], 201h", 0], ["mov +(qword ptr \\[r|dword ptr \\[e).+\\], 6(|\\s;.*)$", 2]], "regex":true}
    }
}
